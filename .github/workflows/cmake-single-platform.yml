# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Tests

on:
  push:
    branches: [ "main", "testing" ]
  pull_request:
    branches: [ "main", "testing" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Test

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DTARGET_GROUP=test -DSDL_UNIX_CONSOLE_BUILD=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload build directory
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: ${{ github.workspace }}/build

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: build
        path: ${{ github.workspace }}/build

    - name: Restore execute permissions to test binaries
      run: chmod -R +x ${{ github.workspace }}/build

    - name: Run tests
      run: ${{ github.workspace }}/build/test/raycast_tests
